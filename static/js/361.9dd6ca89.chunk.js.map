{"version":3,"file":"static/js/361.9dd6ca89.chunk.js","mappings":"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","sources":["components/common.styled.js","components/Form/Form.styled.js","components/Form/Form.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/App/App.styled.js","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  background-color: #daffd7;\n  min-height: 100vh;\n  overflow-y: auto;\n`;\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding-top: 25px;\n  padding-bottom: 25px;\n`;\n\nexport const PageTitle = styled.h1`\n  margin-bottom: 25px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-bottom: 25px;\n`;\n","import styled from '@emotion/styled';\n\nexport const ContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 10px;\n  width: 200px;\n  height: 25px;\n\n  border-radius: 3px;\n  outline: 1px solid #c22f2f;\n`;\n\nexport const Button = styled.button`\n  width: 120px;\n  height: 30px;\n  background-color: #ffe087;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n  box-shadow: 0 0 4px 0px;\n\n  :hover,\n  :focus {\n    background-color: #fdd358;\n  }\n\n  :active {\n    box-shadow: inset 0 0 4px 0px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nimport { ContactForm, Label, Input, Button } from './Form.styled';\n\nexport const Form = () => {\n  const [contactName, setContactName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    if (e.target.name === 'name') {\n      setContactName(e.target.value);\n    }\n    if (e.target.name === 'number') {\n      setContactNumber(e.target.value);\n    }\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const contact = {\n      name: contactName,\n      number: contactNumber,\n    };\n\n    const repeatedNames = contacts.filter(item => item.name === contactName);\n\n    if (repeatedNames.length === 0) {\n      dispatch(addContact(contact));\n    }\n    if (repeatedNames.length !== 0) {\n      window.alert('You have already this contact in your list');\n    }\n\n    form.reset();\n  };\n\n  return (\n    <ContactForm onSubmit={handleFormSubmit}>\n      <Label htmlFor=\"contactName\">Write down a name</Label>\n      <Input\n        id=\"contactName\"\n        type=\"text\"\n        name=\"name\"\n        onChange={handleInputChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        placeholder=\"e. g., John Smith\"\n        required\n      />\n      <Label htmlFor=\"contactTel\">Write down a phone number</Label>\n      <Input\n        id=\"contactTel\"\n        type=\"tel\"\n        name=\"number\"\n        onChange={handleInputChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </ContactForm>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  margin-bottom: 10px;\n  width: 200px;\n  height: 25px;\n\n  border-radius: 3px;\n  outline: 1px solid #c22f2f;\n\n  margin-bottom: 20px;\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { setFilter } from '../../redux/filterSlice';\n\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterInputChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <>\n      <Label htmlFor=\"contactFilter\">Find contact by name</Label>\n      <Input\n        id=\"contactFilter\"\n        name=\"filter\"\n        type=\"text\"\n        onChange={handleFilterInputChange}\n      />\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactInfo = styled.p`\n  margin-bottom: 10px;\n  margin-right: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 120px;\n  height: 20px;\n  background-color: #ffe087;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n  box-shadow: 0 0 4px 0px;\n\n  :hover,\n  :focus {\n    background-color: #fdd358;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { deleteContact } from 'redux/operations';\n\nimport { ContactInfo, Button } from './Contact.styled';\n\nexport const Contact = contact => {\n  const dispatch = useDispatch();\n  const { name, number, id } = contact.contact;\n\n  const onContactDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <ContactInfo>\n        {name}: {number}\n      </ContactInfo>\n      <Button type=\"button\" onClick={onContactDelete}>\n        Delete contact\n      </Button>\n    </>\n  );\n};\n\nContact.propTypes = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n});\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: baseline;\n\n  :nth-of-type(n + 2) {\n    margin-top: 15px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { selectContacts, selectFilteredContacts } from 'redux/selectors';\n\nimport { Contact } from '../Contact/Contact';\n\nimport { ListItem } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ul>\n      {contacts &&\n        filteredContacts.map(contact => {\n          return (\n            <ListItem key={contact.id}>\n              <Contact contact={contact} />\n            </ListItem>\n          );\n        })}\n    </ul>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Notification = styled.p`\n  display: flex;\n  justify-content: center;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport { Form } from '../components/Form/Form';\nimport { Filter } from '../components/Filter/Filter';\n\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { fetchContacts } from '../redux/operations';\nimport { selectContacts, selectIsLoading } from '../redux/selectors';\n\nimport {\n  Container,\n  Section,\n  PageTitle,\n  SectionTitle,\n} from '../components/common.styled';\nimport { Notification } from '../components/App/App.styled';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Section>\n        <PageTitle>Phonebook</PageTitle>\n        <SectionTitle>Adding contact</SectionTitle>\n        <Form />\n      </Section>\n      <Section>\n        <SectionTitle>Your noted contacts</SectionTitle>\n        {contacts.length > 0 ? (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        ) : (\n          <Notification>There are no contacts. Please add some.</Notification>\n        )}\n        {isLoading && <b>Loading contacts...</b>}\n      </Section>\n    </Container>\n  );\n}\n"],"names":["Container","styled","Section","PageTitle","SectionTitle","ContactForm","Label","Input","Button","Form","useState","contactName","setContactName","contactNumber","setContactNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","handleInputChange","e","target","name","value","onSubmit","preventDefault","form","contact","number","repeatedNames","filter","item","length","addContact","window","alert","reset","htmlFor","id","type","onChange","pattern","title","placeholder","required","Filter","setFilter","currentTarget","ContactInfo","Contact","onClick","deleteContact","ListItem","ContactList","filteredContacts","selectFilteredContacts","map","Notification","Tasks","isLoading","selectIsLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}